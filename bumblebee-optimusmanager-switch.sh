#!/bin/bash

GREENCOLOR='\033[1;32m'
REDCOLOR='\033[1;31m'
WHITECOLOR='\033[1;1m'
NOCOLOR='\033[0m'

bbState=$(systemctl is-enabled bumblebeed)
omState=$(systemctl is-enabled optimus-manager)

echo -e "${REDCOLOR}MAKE SURE YOU HAVE SAVED ALL OF YOUR WORK BEFORE CONTINUING!!${NOCOLOR}"
read -p ''
continue=0

while [[ continue -eq 0 ]]; do
  clear
  echo -e "Choose between these three :"
  if [[ $bbState = "enabled" ]]; then
      printf "${REDCOLOR}"
  fi
  printf "1. Bumblebee+Xrun Solution (Unofficial Offloading + Manual Switch)"
  if [[ $bbState = "enabled" ]]; then
      printf "${NOCOLOR}${WHITECOLOR}  <ACTIVE>${NOCOLOR})"
  fi
  printf "\n"
  if [[ $omState = "enabled" ]]; then
      printf "${REDCOLOR}"
  fi
  echo -e "2. Optimus Manager Solution (Manual Switch with Official Offloading Support)"
  if [[ $omState = "enabled" ]]; then
      printf "${NOCOLOR}${WHITECOLOR}  <ACTIVE>${NOCOLOR}"
  fi
  printf "\n"
  if [[ $bbState = "disabled" && $omState = "disabled" ]]; then
    printf "${REDCOLOR}"
  fi
  echo -e "3. Nouveau Solution (Open driver without switching ability)"
  if [[ $bbState = "disabled" && $omState = "disabled" ]]; then
      printf "${NOCOLOR}${WHITECOLOR}  <ACTIVE>${NOCOLOR}"
  fi

  printf "\n"
  read -p 'Your Choice: ' userInput
  if [[ ($userInput -eq 1 && $bbState != "enabled") || ($userInput -eq 2 && $omState != "enabled") || ($userInput -eq 3 && ! ($bbState = "disabled" && $omState = "disabled")) ]]; then
    continue=1
  else
    read -p 'Please try selecting inactive solution instead'
  fi
done

if [[ $(sudo whoami) = 'root' ]];then
  if [[ $userInput -eq 2 ]];then
		read -p "Are you sure you want to switch to Optimus Manager solution (Y/n) ? " input
		input=$(echo "$input" | awk '{print tolower($0)}')
		if [[ $input = 'y' ]] || [[ $input = 'yes' ]] || [[ $input = '' ]];then
			echo "Disabling bumblebeed..."
			sudo systemctl disable bumblebeed.service
			echo "Renaming nvidia-xorg.conf"
			sudo mv /etc/X11/nvidia-xorg.conf /etc/X11/nvidia-xorg.conf.bak
			echo "Renaming intel.conf"
			sudo mv /etc/X11/mhwd.d/intel.conf /etc/X11/mhwd.d/intel.conf.bak
			echo "Enabling optimus-manager..."
			sudo systemctl enable optimus-manager.service
			if [[ $bbState = "disabled" && $omState = "disabled" ]]; then
			  echo -e "\nRenaming modprobes"
			  echo "Renaming bumblebee.conf"
        sudo mv /usr/lib/modprobe.d/bumblebee.conf.bak /usr/lib/modprobe.d/bumblebee.conf
        echo "Renaming nvidia-dkms.conf"
        sudo mv /usr/lib/modprobe.d/nvidia-dkms.conf.bak /usr/lib/modprobe.d/nvidia-dkms.conf
        echo "Renaming optimus-manager.conf"
        sudo mv /usr/lib/modprobe.d/optimus-manager.conf.bak /usr/lib/modprobe.d/optimus-manager.conf
			fi
		fi
	elif [[ $userInput -eq 1 ]]; then
		read -p "Are you sure you want to switch to Bumblebee and Nvidia-xrun solution (Y/n) ? " input
		input=$(echo "$input" | awk '{print tolower($0)}')
		if [[ $input = 'y' ]] || [[ $input = 'yes' ]] || [[ $input = '' ]];then
			echo "Disabling optimus-manager..."
			sudo systemctl disable optimus-manager.service
			echo "Enabling bumblebeed..."
			sudo systemctl enable bumblebeed.service
			echo "Renaming nvidia-xorg.conf.bak"
			sudo mv /etc/X11/nvidia-xorg.conf.bak /etc/X11/nvidia-xorg.conf
			echo "Renaming intel.conf.bak"
			sudo mv /etc/X11/mhwd.d/intel.conf.bak /etc/X11/mhwd.d/intel.conf
			if [[ $bbState = "disabled" && $omState = "disabled" ]]; then
			  echo -e "\nRenaming modprobes"
			  echo "Renaming bumblebee.conf"
        sudo mv /usr/lib/modprobe.d/bumblebee.conf.bak /usr/lib/modprobe.d/bumblebee.conf
        echo "Renaming nvidia-dkms.conf"
        sudo mv /usr/lib/modprobe.d/nvidia-dkms.conf.bak /usr/lib/modprobe.d/nvidia-dkms.conf
        echo "Renaming optimus-manager.conf"
        sudo mv /usr/lib/modprobe.d/optimus-manager.conf.bak /usr/lib/modprobe.d/optimus-manager.conf
			fi
			echo "Cleaning autogenerated Optimus Manager configurations..."
			sudo optimus-manager --cleanup
		fi
	else
	  read -p "Are you sure you want to switch to Nouveau solution (Y/n) ? " input
	  input=$(echo "$input" | awk '{print tolower($0)}')
		if [[ $input = 'y' ]] || [[ $input = 'yes' ]] || [[ $input = '' ]];then
			echo "Disabling optimus-manager..."
			sudo systemctl disable optimus-manager.service
			echo "Disabling bumblebeed..."
			sudo systemctl disable bumblebeed.service
			echo "Renaming nvidia-xorg.conf.bak"
			sudo mv /etc/X11/nvidia-xorg.conf.bak /etc/X11/nvidia-xorg.conf
			echo "Renaming intel.conf.bak"
			sudo mv /etc/X11/mhwd.d/intel.conf.bak /etc/X11/mhwd.d/intel.conf
			echo -e "\nRenaming modprobes"
			echo "Renaming bumblebee.conf"
			sudo mv /usr/lib/modprobe.d/bumblebee.conf /usr/lib/modprobe.d/bumblebee.conf.bak
			echo "Renaming nvidia-dkms.conf"
			sudo mv /usr/lib/modprobe.d/nvidia-dkms.conf /usr/lib/modprobe.d/nvidia-dkms.conf.bak
			echo "Renaming optimus-manager.conf"
			sudo mv /usr/lib/modprobe.d/optimus-manager.conf /usr/lib/modprobe.d/optimus-manager.conf.bak
			echo "Cleaning autogenerated Optimus Manager configurations..."
			sudo optimus-manager --cleanup
		fi
	fi
	read -p "Done! Reboot now (Y/n) ? " rebootnow
	rebootnow=$(echo "$rebootnow" | awk '{printf tolower($0)}')
	if [[ $rebootnow = 'y' ]] || [[ $rebootnow = 'yes' ]] || [[ $rebootnow = '' ]]; then
		reboot
	fi
else
	echo "Authorization failed. Are you root?"
	read -p ''	
fi
